name: Test core functionality of image

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      image_os:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:
  test:
    env:
      EXPECTED_VARIABLE_COUNT: ${{ inputs.arch == 'x64' && 100 || 80 }}
      EXPECTED_RUNNER_ARCH: ${{ inputs.arch == 'x64' && 'X64' || 'ARM64' }}
      EXPECTED_ANDROID_HOME: ${{ inputs.arch == 'x64' && '/usr/local/lib/android/sdk' || '' }}
    name: ${{ inputs.image_os }} ${{ inputs.arch }} core functionality
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print kernel version
        run: uname -mr

      - name: Print OS version
        run: lsb_release -a

      - name: Print environment variables
        run: printenv

      - name: Print PATH
        run: echo $PATH

      - name: Verify that has environment variables more than expected count
        run: |
          count=$(env | wc -l)
          if [ "$count" -lt $EXPECTED_VARIABLE_COUNT ]; then
            echo "Environment has $count variables, expected at least $EXPECTED_VARIABLE_COUNT"
            exit 1
          fi

      - name: Verify that environment variables are set correctly
        run: |
          source ./test-helpers.sh
          expect "$HOME" "/home/runner"
          expect "$RUNNER_ARCH" "$EXPECTED_RUNNER_ARCH"
          expect "$ImageOS" "${{ inputs.image_os }}"
          expect "$ANDROID_HOME" "$EXPECTED_ANDROID_HOME"
          expect_path_variable "/home/runner/.cargo/bin"
          expect_path_variable "/home/runner/.config/composer/vendor/bin"

      - name: Try to update apt-get
        run: sudo apt-get update

      - name: Check filesystem
        run: sudo fsck -nf || [ $? -eq 4 ]
      
      - name: Check docker internet connectivity
        run: docker run alpine ping -c 2 google.com

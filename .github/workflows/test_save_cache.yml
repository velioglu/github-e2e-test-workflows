name: Test save cache functionalities

on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      image_os:
        required: true
        type: string
      arch:
        required: true
        type: string

jobs:
  test:
    name: ${{ inputs.image_os }} ${{ inputs.arch }} save cache
    runs-on: ${{ inputs.runner }}
    env:
      CACHE_VERSION: ${{ inputs.runner }}-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create version file trigger fresh cache
        run: |
          echo "Cache version: ${{ env.CACHE_VERSION }}" >> cache-version.txt

      # - name: Setup python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.9'
      #     cache: 'pip'
      #     cache-dependency-path: |
      #       python/requirements.txt
      #       cache-version.txt

      # - run: pip install -r python/requirements.txt

      # - name: Setup go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: '1.22'
      #     cache-dependency-path: |
      #       go/go.sum
      #       cache-version.txt

      # - name: Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   env:
      #     BUNDLE_GEMFILE: ./ruby/Gemfile
      #   with:
      #     ruby-version: '3.2.6'
      #     bundler-cache: true
      #     cache-version: ${{ env.CACHE_VERSION }}

      # - name: Cache Rust dependencies
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     prefix-key: ${{ env.CACHE_VERSION }} 

      # - name: Build Rust project
      #   run: cargo build
      #   working-directory: ./rust

      # - name: Generate folders and files to cache
      #   run: |
      #     mkdir myfolder
      #     dd if=/dev/urandom of=myfolder/file1.txt bs=1M count=10
      #     mkdir myfolder2
      #     dd if=/dev/urandom of=myfolder2/file1.txt bs=1M count=15

      # - name: Save folders and files
      #   uses: actions/cache/save@v4
      #   with:
      #     path: |
      #       myfolder
      #       myfolder2
      #     key: cached_folders_${{ env.CACHE_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./docker
          push: false
          cache-to: type=gha,mode=max

      - name: Print cache proxy log
        run: sudo cat /var/log/cacheproxy.log
        if: always()
